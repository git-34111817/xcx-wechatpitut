css小技巧：
	要修改样式，从网页中把它拷贝下来然后在最后的head->style的css中加入即可。
ps小技巧：
	改变色相，就会改变整体背景的颜色。那个牛奶图

class全部加.
id选择器全部加#
元素什么也不用加

max-width:100px;
颜色：
	#333 灰色
	#3366cc 蓝色
css权重：color:red!important;加在样式后，权重值为10000.
		内联样式style="",权重值为1000。
		ID选择器，如#content，权重值为100.
		类，伪类和属性选择器，如content，hover的权重值为10
		标签选择器和伪元素选择器，如：div、p、:before的权重值为1
		通用选择器（*）、子选择器（>）、相邻选择器（+）、同胞选择器（~）权重值为0。

overflow: hidden;当溢出元素框时，发生的事情。
做出来的有莫名奇妙的问题时，就把margin和padding设置一下。

要撑开盒子用overflow: hidden;，或者clearfix;

E>F E元素下面第一层子集。
E~F E 元素后面的兄弟元素。
E+F 紧挨着的兄弟元素。
·css一般要放在首页里，不加外链访问速度就提升上去了。
·微软雅黑默认带了行高的样式，所以有时候做css会不准，但可以用行高：20解决。
·.box+tab键=<div class="box"></div>
·margin具有合并性。
·margin负值可以使边框合并。
·text-align属性设置子元素水平对齐方式，用line-heght属性值设置垂直对齐方式。
让几个文字居中的方法：text-indent：15px 和 line-height：50px。
css引用方法：
1.<link rel="stylesheet" type="text/css" href="">
2.	<style type="text/css">
	div{width: "100px"}
	...
	</style>
3.style="width:100px; "
CSS文本设置：
	color设置文字颜色，如color：red;
	font-size设置字体大小 font-size:1px;
	font-family设置文字的字体，例如 font-family: "Miccosoft Yahei";
	font-style: 文字是否倾斜。 font-style:"normal";表示不倾斜， font-style: "italic"表示倾斜；
	font-weight: 是否加粗bold加粗，normal不加粗；这一条中的值不用加引号。
	font:同时设置几个属性 格式：font:是否加粗 字号/行高 字体;如：font:normal 12px/35px "Miccosoft Yahei";
	line-height: 设置文字行高：如:line-height:24px;
	text-decoration: 设置文字的下划线，如:text-decoration:none；表示去掉下划线。
	text-indent:设置文字首行缩进，
颜色：如：text-indent:24px; 设置文字首行缩进为24px。
	text-align: 设置文字水平对齐方式，如:text-align:"center";设置文字水平居中。
	list-style=none  将段落前面的点去掉。
	color：red
	rgb(0,0,0)
	#f2f2f2
选择器：
	*{color：red} #设置所有样式
	id选择器。
	head<style type="text/css">
	#div2{width: "100px"}
	...
	</style>
	<div id="div2">ID样式选择器。</div>
	类选择器：
	.red{
		color：red
	}
	class="red blod"
	层级选择器：
	 只会对层里面的。最多四层。太多匹配越慢。
		.list a c{color：red}  //一般不要超过四层。
	组选择器：
		公共的：.box1,.box2,.box3{公共的样式。}
		不同的单独定义：
		.box1{不同样式}
		.box2{不同样式}
		.box3{不同样式}
	伪类选择器，伪元素选择器：
		//指针划过选择器。
			.li a:hover{color：red;font-size: 30px} 
			<ul class="li" >
				<li><a href="">新闻标题</a></li>
			</ul>
		//css往前输值。因为是样式，选中不了。before、after和content同时使用。
			.li a:before{content:"前值"} 
			<ul class="li" >
				<li><a href="">新闻标题</a></li>
			</ul>		
			.li a:after{content:"后值"} 
			<ul class="li" >
				<li><a href="">新闻标题</a></li>
			</ul>
表格样式：
	.goods_list{
		width: 500px
		height:100rpx
		border:1px solid #333;
		border-collapse: collapse; #将边框合并。
	}
	.goods_list th,.goods_list td{ #内部边框。
		border:1px solid #333;
		background-color: blue
	}
	
CSS盒子模型布局：（实际布局不用table）
			 width: 600px;
			height: 500px;
			background-color: gold;
			border: 10px solid #333;
			padding: 10px;
			margin:auto; #auto 表示自由居中，需要设置width才能使用该功能。一般只管上左右，不管下，（下会进行选择性（大值）合并。浮动没有合并。）
	
margin-top设置内部的margin-top，设置里面会导致最外层的元素具有margin-top属性，解决方法：
.clearfix:before{
	content: "";
	display: table;
}//加入伪元素。
当元素溢出，就在父元素中加入：overflow: hidden;
visible，默认值，内容不会修剪，会保留。
hidden：多出的值会被隐藏，此属性具有清除浮动，清除margin-top塌陷的功能。
scroll内容会被修剪，但是会显示滚动条查看其余内容。
auto，如果内容修剪，则浏览器会显示滚动条以便查看其余的内容。
inherit规定应该从父元素继承overflow属性的值。
快元素：
	div p ul li h1-6 dl dt dd
	支持全部样式。
	如果没有设置宽度，默认宽度为父级宽度100%
	盒子占据一行，集市设置了宽度。
内联元素：
	a,span,em,b,strong,i。
	支持部分样式（不支持宽高，margin上下，padding上下）
	宽度由内容决定。
	盒子并在一行。
	代码换行盒子之间会产生间距。
	···子元素是内联元素，父元素可以用text-align属性设置子元素水平对齐方式，用line-heght属性值设置垂直对齐方式。
解决内联元素间隙的方法：
		代码必要有换行。
		将内联元素的父级设置font-size:0,内联元素再设置font-size:。
内联块元素：
	用层结构去写.div a{}
	支持全部样式。
	盒子并在一行。
	代码换行，盒子之间会产生间距。
	元素是内联块元素，父元素可以用text-align属性设置子元素水平对齐方式，用line-heght属性值设置垂直对齐方式。

display：
	none:元素隐藏且不占位置
	block元素以块元素显示
	inline元素以内联元素显示
	inline-block元素以内联块元素显示

浮动：实际开发中我们吧所有的样式都浮动
	CSS样式：

	float:left;
清除浮动：
	overflow:hidden;
	在最后面加空div 增加样式为：<div style="clear:both"></div>
	加clearfix
	<!--清除浮动和清除margin-top塌陷的-->
	.clearfix:before,.clearfix:after{
		display: table;
		content: "";
	}
	.clearfix:after{
		clear: both;
	}
	.clearfix{zoom:1;}
定位：
一般设置上一层为position: relative;。而下一层为position: absolute;
	父级一般设置为position: relative;
	left,right,top,bottom。(一般是正值。） left:10px
	relative:生成定位元素，元素所占据的文档流的位置不变，元素本身相对文档流得我位置进行偏移。
	absolute不占据文档位置，向上一层一层找定位。上层一般加CSS设置为position: relative;没有就按照body来进行。
	fixed：生成固定定位元素，元素脱离文档流，不占据文档流位置，可以理解漂浮在文档流上方，相对于浏览器窗口进行定位。
	static：默认值。
定位特性：
	也会转换为行内块元素。
层级：可以用z-index属性来设置元素的层级。z-index：10
典型定位布局：
	固定在顶部的菜单。
	水平垂直居中的弹框。
	固定的侧边的工具栏。
	固定在底部的按钮。
	background-color: #0333;
#当以下设置成body属性时，则会对整个页面进行设置。
	background-image:url(image/bg.jpg);   #设置背景图片
	background-repeat: repeat重复，repeat-x repeat-y,no-repeat不重复。；
	background-position: left center;  #靠左中间垂直对齐的。记得设置不重复。
	left/center/top/bottom.
	也可以这样写
	background-position: 100px 100px ;
	background-attachment: fixed;  #滚动的时候图片是否固定。
	
CSS3
div ul li:nth-child(2n){}匹配第偶数个标签。匹配第2n如果是li元素就成功，否则就无意义。
div ul li:nth-of-type(2n+1){}匹配第奇数个标签。过滤掉其他元素，li按偶次执行。
		可以写数字，代数倒着数。
div ul li:nth-last-child(1)倒着数，最后一个。
div ul li:nth-only-child()匹配唯一一个。内部元素只能有一个，当有两个时就不起作用。
div ul li p:nth-only-of-type()匹配唯一一个p标签。内部元素可以有很多个，但是只能有一个p标签，否则不起作用。
div:empty{}寻找空的div然后加入样式。
div:enabled{}可用的表单控件。
div:disabled{}失效的表单控件。
div:checkde{}选中的checkbox。
div.not(s){}不包含某元素。
div:checked + label{}这个意思是div和label是兄弟元素，他们有相同的样式指示。
圆角：
border-top-left-raduis:30px 60px;设置上左的像素值。
border-radius:30px,30px,30px,30px;对应四个角。
阴影：
box-shadow:偏移x,偏移y,虚硬,扩充 pink 加inset对内，不加外;
box-shadow:0px,0px,10px,0px pink ;
box-shadow:0px,0px,10px,0px pink inset;
inset：可以做一个渐变的效果。可以做内阴影效果
设置透明度：写透明度一般要写两句。
opacity:0.5;百分之三十透明度。
filter:alpha(opacity=50);
rgba:新颜色的表示法：a表示透明度0-1.

动画：transition 元素中设置，元素：hover中设置。
transition:四个属性：过渡属性，过渡的时间，运动方式，动画的延迟。
过渡属性：width,height,background-color
过渡时间：比如：1s 500ms
过渡方式：linear匀速
		ease：开始结束慢速
		ease-in:开始是慢速
		ease-out:结束时慢速
		ease-in-out：开始和结束时时慢速
		cubic-bezier(n,n,n,n)曲线 用法一致，在https://matthewlein.com/tools/ceaser复制值，填入到最后即可。
动画延迟：比如：1s 500ms
需要同时设置四个属性。
在动画元素css中加入：width:50px;
transition:width 500ms ease,width 500ms ease;
或者transition:all;
.div:hover{width: 100px;height: 100px;}
hover属性一般在外一层书写。

transform变形（静态效果）：真正的3D效果。都可设置负值。
	transform:translate(向下偏移x，向左偏移y) 位移（比position性能高，会占据位置）translatex：x轴移动。translatey：y轴移动。translatez：z轴移动。
	transform:perspective(800px) rotate(30deg);默认是z轴转。  旋转30度。transform:rotatex(30deg)x轴转。transform:rotatey(30deg)y轴转。
	transform:scale(x,y)；  缩放 transform：scale(0.5,0.2)；  x轴缩放50%，y轴缩放20%。scalex,scaley,scalez，
	transform:skew(x45deg,y0):  ;  倾斜45度。
	transform:
	给他们做动画： 
		.box{transition:all 500ms ease;}设置他的应有属性
		.box:hover{
			transform:skew(x45deg,y0):  ;  倾斜45度。
		}hover设置他的transform属性。
	transform:perspective(800px) rotate(30deg);默认是z轴转。	具有透视效果。
	设置透视必须设置：transform-style: preserve-3d;使transfrom具有3D效果。
	如果存在bug，则在初始状态时，将要进行动画变形的代码默认设置为0:transform:perspective(800px) rotate(0deg);
方向判断：x轴向右，y轴向下，z轴向外。
		2.让轴向对着自己，顺时针方向就是该轴的方向
	transform-origin: top right;设置变形的中心点
	backface-visibility: hidden;设置盒子背面是否可见。

animation动画  做动画一定记得图片是抽离的方向，发现空白加负号。
	animation:animationname time ease timedelay 动画次数(n|infinite无限次) Alternate
	@keyframes 定义关键帧动画
		@keyframes animationname{from{} to{} 或者0%{} 10%{}}
	animation-name 动画名称
	animation-duration 动画时间
	animation-timing-function 动画曲线
	    linear 匀速
	    ease 开始和结束慢速
	    ease-in 开始是慢速
	    ease-out 结束时慢速
	    ease-in-out 开始和结束时慢速
	    steps(8) 动画步数 "针跳动"
	animation-delay 动画延迟
	animation-iteration-count 动画播放次数 n|infinite
	animation-direction
	    normal 默认动画结束不返回
	    Alternate 动画结束后返回
	animation-play-state 动画状态 这个状态在.box:hover{}中设置。
	    paused 停止
	    running 运动
	animation-fill-mode 动画前后的状态
	    none 不改变默认行为
	    forwards 当动画完成后，保持最后一个属性值（在最后一个关键帧中定义）
	    backwards 在 animation-delay 所指定的一段时间内，在动画显示之前，应用开始属性值（在第一个关键帧中定义）
	    both 向前和向后填充模式都被应用
	animation:name duration timing-function delay iteration-count direction;同时设置多个属性 
加前缀兼容：
	为了让CSS3样式兼容，需要将某些样式加上浏览器前缀：
	-ms- 兼容IE浏览器
	-moz- 兼容firefox
	-o- 兼容opera
	-webkit- 兼容chrome 和 safari 
autooprefixer设置：
Sublime text 中安装 autoprefixer 执行 preferences/key Bindings-Users 设置快捷键 { "keys": ["ctrl+alt+x"], "command": "autoprefixer" } 通过此工具可以按照最新的前缀使用情况给样式自动加前缀。本工具仅针对CSS。
	preferences/key Bindings-Users
	{ "keys": ["ctrl+alt+x"], "command": "autoprefixer" } 
	Perferences>package setting>AutoPrefixer>Setting-User
	{
		"browsers":["last 7 versions"],
		"cascade":true,
		"remove":true
	}
	一般不用这种方法，一般用gulp直接全部优化就行了。
H5新增的标签：都当成div来用。
	header 页面头部，页眉
	nav 页面导航
	article 一篇文章
	section 文章中的章节
	aside 侧边栏
	footer 页面底部，页脚
新增表单控件类型一般不用 ，因为在不同的浏览器中是不允许不一样的。面试的时候直接背一下就行了。
	中间有两个属性特别重要，可以应用到input中：
	placeholder="请输入文字，禁止使用+-*/."：设置文本框默认显示文字，当鼠标填入就直接清空了。
	autofocus 直接填即可。自动获取焦点，自动激活。
	autocomplete="off" 作用是为了关掉联想关键词。
音频和视频标签：
	<audio src="" preload="" >
		<source src="" type=""></source>也可以存放多条链接，但取只能一条，整个结构算一条语句。
	</audio>
		autoplay:自动播放
		controls：显示播放器
		loop：循环播放
		preload：预加载
		muted：静音
	<video src="" >
		</source>也可以存放多条链接，但取只能一条，整个结构算一条语句。
	</video>
		属性：
		1、width
		2、height
		3、Poster 
background-size:
    length：用长度值指定背景图像大小。不允许负值。
    percentage：用百分比指定背景图像大小。不允许负值。
    auto：背景图像的真实大小。
    cover：将背景图像等比缩放到完全覆盖容器，背景图像有可能超出容器。
    contain：将背景图像等比缩放到宽度或高度与容器的宽度或高度相等，背景图像始终被包含在容器内。
		background-size:500px 500px;
适配方式：
	全适配：流体布局+响应式布局。
		流体布局：
			width:calc(25% - 4px);
			box-sizing:border-box;  以盒子边缘为边框了。
				content-box 默认的盒子尺寸计算方式。
				border-box 置盒子的尺寸计算方式为从边框开始，盒子的尺寸，边框和内填充算在盒子尺寸内。
		响应式布局：
			普通的布局直接写就行了，满足条件之后写。
			@media (max-width:960px){
			    .left_con{width:58%;}
			    .right_con{width:38%;}
			}
			@media (max-width:768px){
			    .left_con{width:100%;}
			    .right_con{width:100%;}
			}
	移动端适配:
		流体布局+少量响应式。
		基于rem的布局。
		燃性盒布局。




CSS3新增选择器
1、E:nth-child(n)：匹配元素类型为E且是父元素的第n个子元素
	<style type="text/css">            
	    .list div:nth-child(2){
	        background-color:red;
	    }
	</style>
	......
	<div class="list">
	    <h2>1</h2>
	    <div>2</div>
	    <div>3</div>
	    <div>4</div>
	    <div>5</div>
	</div>
<!-- 第2个子元素div匹配 -->
2、E:nth-last-child(n)：匹配元素类型为E且是父元素的倒数第n个子元素（与上一项顺序相反）
3、E:first-child：匹配元素类型为E且是父元素的第一个子元素
4、E:last-child：匹配元素类型为E且是父元素的最后一个子元素
5、E:only-child：匹配元素类型为E且是父元素中唯一的子元素
6、E:nth-of-type(n)：匹配父元素的第n个类型为E的子元素
7、E:nth-last-of-type(n)：匹配父元素的倒数第n个类型为E的子元素（与上一项顺序相反）
8、E:first-of-type：匹配父元素的第一个类型为E的子元素
9、E:last-of-type：匹配父元素的最后一个类型为E的子元素
10、E:only-of-type：匹配父元素中唯一子元素是E的子元素
11、E:empty 选择一个空的元素
12、E:enabled 可用的表单控件
13、E:disabled 失效的表单控件
14、E:checked 选中的checkbox
15、E:not(s) 不包含某元素
	<style type="text/css">            
	    .list div:not(:nth-child(2)){
	        background-color:red;
	    }
	</style>
	......
	<div class="list">
	    <h2>1</h2>
	    <div>2</div>
	    <div>3</div>
	    <div>4</div>
	    <div>5</div>
	</div>
<!-- 第 3、4、5 子元素div匹配 -->
16、E:target 对应锚点的样式
	<style type="text/css">
	    h2:target{
	        color:red;
	    }
	</style>
	......
	<a href="#tit01">标题一</a>
	......
	<h2 id="tit01">标题一</h2>
<!-- 点击链接，h2标题变红 -->
17、E > F E元素下面第一层子集
18、E ~ F E元素后面的兄弟元素
19、E + F 紧挨着的兄弟元素

属性选择器：
1、E[data-attr] 含有data-attr属性的元素
	<style type="text/css">
	    div[data-attr='ok']{
	        color:red;
	    }
	</style>
	......
	<div data-attr="ok">这是一个div元素</div>
<!-- 点击链接，h2标题变红 -->
2、E[data-attr='ok'] 含有data-attr属性的元素且它的值为“ok”
3、E[data-attr^='ok'] 含有data-attr属性的元素且它的值的开头含有“ok”
4、E[data-attr$='ok'] 含有data-attr属性的元素且它的值的结尾含有“ok”
5、E[data-attr*='ok'] 含有data-attr属性的元素且它的值中含有“ok”